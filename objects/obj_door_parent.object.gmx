<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>14</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Door
image_speed = 0;
holding = noone;
dest = noone;
type = 0
locked = 1;
entered = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ir para destino

//Criar Mario no destino
instance_activate_object(dest);
instance_create(dest.x+8,dest.y-21,obj_mario);

obj_mario.holding = holding;
instance_activate_object(holding);

//Criar Autoscroll e Classic scroll novamente
if(global.uni_level_autoscroll == 1)
||(global.uni_level_autoscroll == 2)
||(global.uni_level_autoscroll == 3)
||(global.uni_level_autoscroll == 4)
||(global.uni_level_autoscroll == 5)
||(global.uni_level_autoscroll == 6)
||(global.uni_level_autoscroll_v == 1)
||(global.uni_level_autoscroll_v == 2)
||(global.uni_level_autoscroll_v == 3)
||(global.uni_level_autoscroll_v == 4)
||(global.uni_level_autoscroll_v == 5)
||(global.uni_level_autoscroll_v == 6)
    instance_create(view_xview[0]+214,view_yview[0]+226,obj_uni_autoscroll);
if(global.uni_level_autoscroll == 7)
||(global.uni_level_autoscroll_v == 7)
||(global.uni_level_autoscroll == 8)
||(global.uni_level_autoscroll_v == 8)
    instance_create(0,0,obj_uni_classicscroll);

//Fechar porta (som)
audio_playstop_sound(snd_door,0,0);

entered = 0;

//Parar alarm
alarm[1] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Entrar

if(keyboard_check_pressed(vk_up)) {

//Destruir Scrolls
with(obj_uni_autoscroll) instance_destroy();
with(obj_uni_classicscroll) instance_destroy();

//Destruir Mario
with(obj_mario) instance_destroy();

//Ir para destino
alarm[1] = 1;

//Notificar gerenciador do nível
with(obj_uni_levelmanager){

    global.barrier = 1;
    alarm[6] = 2;
};

//Fade the screen
with(obj_persistent) event_user(0);

//Fechar porta
image_index = 0;

//Parar alarm    
alarm[0] = -1;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Let Mario in the door
if(keyboard_check_pressed(global.key_up))
&amp;&amp;(instance_exists(dest))
&amp;&amp;(dest.entered == 0){

    if(type == 1){
        if(global.switchon == 1)
            event_user(0);
    };
    else if(type == 2){
    
        if(locked == 0)
            event_user(0);
        else{
        
            if(instance_exists(obj_mario)){
                
                if(instance_place(x,y,obj_mario))
                and(obj_mario.state != 2)
                and(obj_mario.vspeed == 0)
                and(obj_mario.y &lt;= y-14)
                and(!instance_place(x,y,obj_key))
                    audio_play_sfx(snd_door);
            }
        }
    };
    else
        event_user(0);
};

if(instance_exists(obj_mario))
&amp;&amp;(entered == 1){

    obj_mario.x = x+8;
    obj_mario.y = y-16;
};

if(instance_exists(obj_goalmario)){

    if(place_meeting(x,y,obj_goalmario))
    and(obj_goalmario.ready == 2)
    and(obj_goalmario.vspeed == 0)
        image_speed = 0.15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if type == 2
and locked == 1
and other.held = 1
and instance_exists(obj_mario)
and (keyboard_check_pressed(global.key_up))
{
    if(instance_place(x,y,obj_mario))
    and(obj_mario.state != 2)
    and(obj_mario.vspeed == 0)
    and(obj_mario.y &lt;= y-14)
    {
        audio_play_sfx(sfx_door_unlock); 
        event_user(1);
        instance_create(x+3,y-8,obj_spinthump);
        with(dest){locked = 0; instance_create(x+3,y-8,obj_spinthump);}; 
        obj_mario.holding = 0; 
        with(other) instance_destroy();
    };

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sfx(snd_door);
locked = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Entrar na porta
if(instance_exists(obj_mario)){

    if(instance_place(x,y,obj_mario))
    and(obj_mario.state != 2)
    and(obj_mario.vspeed == 0)
    and(obj_mario.y &lt;= y-14)
    and(visible == 1)
    and(alarm[0] = -1)
    and(alarm[1] = -1)
    and(image_speed == 0)
    and(image_index == 0){
    
    //Play the door sound
    audio_playstop_sound(snd_door,0,0)
    
    image_speed = 0.15;
    
    holding = obj_mario.holding;
    
    with (obj_mario){
 
    disablecontrols = 1;
    hspeed = 0; 
    vspeed = 0;
    x = other.x+8;
    y = other.y-16;
    };
    entered = 1;
    };
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parar animação
if!(instance_exists(obj_goalmario)){

    image_speed = 0

    //Ir para o destino
    alarm[0] = 1;
};
else{

    image_speed = 0;
    image_index = 0;
    with(obj_goalmario) visible = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Door

//P-Door
if(type == 1){

    if(global.switchon == 1){
    
        if(image_index &gt; 0)
            draw_sprite(spr_door,1,x,y);
        draw_sprite(spr_door_p,image_index,x,y);
    };
    else
        draw_sprite(spr_door_other,3,x,y);
};
//Key Door
else if(type == 2){

    if(locked == 0){
    
        if(image_index &gt; 0)
            draw_sprite(spr_door,0,x,y);
        draw_sprite(spr_door_unlocked,image_index,x,y);
    };
    else
        draw_sprite(spr_door,2,x,y);
};
//Normal
else{

    if(image_index &gt; 0)
        draw_sprite(spr_door,0,x,y);
    draw_sprite(spr_door,image_index,x,y);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
